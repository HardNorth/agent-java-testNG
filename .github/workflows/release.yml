# Copyright 2020 EPAM Systems
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    branches:
      - master
      - v4-hotfix
      - v5-testng6

env:
  VERSION_FILE: gradle.properties
  GH_USER_NAME: github.actor
  CHANGE_LOG_FILE: 'CHANGELOG.md'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get current version
        id: getVersion
        run: |
          version=$(cat ${{env.VERSION_FILE}} | grep version | sed -e 's/^version=//')
          echo "${version}"
          echo "::set-env name=VERSION::${version}"

      - name: Generate release version
        id: generateReleaseVersion
        run: |
          release_version=$(echo "${{env.VERSION}}" | sed -e 's/-SNAPSHOT//i')
          echo "${release_version}"
          echo "::set-env name=RELEASE_VERSION::${release_version}"

      - name: Generate new version
        id: generateNewVersion
        run: |
          patch_version=$(echo "${{env.VERSION}}" | grep -Eo '\.([0-9]+)-' | grep -Eo '[0-9]+')
          let "patch_version++"
          new_version=$(echo "${{env.VERSION}}" | sed -E "s/\.[0-9]+-/.${patch_version}-/")
          echo "${new_version}"
          echo "::set-env name=NEW_VERSION::${new_version}"

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup git credentials
        uses: oleksiyrudenko/gha-git-credentials@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release with Gradle
        id: release
        run: |
          ./gradlew release -PreleaseMode -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{env.RELEASE_VERSION}} \
          -Prelease.newVersion=${{env.NEW_VERSION}} -PbintrayUser=${{secrets.BINTRAY_USER}} -PbintrayApiKey=${{secrets.BINTRAY_API_KEY}} \
          -PgithubUserName=${{env.GH_USER_NAME}} -PgithubToken=${{secrets.GITHUB_TOKEN}}

      - name: Read changelog Entry
        id: readChangelogEntry
        uses: mindsers/changelog-reader-action@v1.1.0
        with:
          version: ${{ env.RELEASE_VERSION }}
          path: ./${{ env.CHANGE_LOG_FILE }}

      - name: Create Release
        id: createRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: ${{ steps.readChangelogEntry.outputs.log_entry }}
          draft: false
          prerelease: false

      - name: Checkout develop branch
        if: ${{github.ref}} == 'master'
        uses: actions/checkout@v2
        with:
          ref: 'develop'
          fetch-depth: 0

      - name: Merge release branch into develop
        id: mergeIntoDevelop
        if: ${{github.ref}} == 'master'
        run: |
          git merge -m 'Merge master branch into develop after a release' origin/master
          merge_errors=$(git status | grep 'both modified')
          git push
